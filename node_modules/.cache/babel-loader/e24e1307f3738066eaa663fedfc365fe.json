{"ast":null,"code":"var _jsxFileName = \"/Volumes/macApp/react/material-ui-table-crud-restapi/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { forwardRef } from 'react';\nimport Avatar from 'react-avatar';\nimport Grid from '@material-ui/core/Grid';\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 37\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 39\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 39\n    }\n  }))),\n  Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 40\n    }\n  }))),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 45\n    }\n  }))),\n  Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 38\n    }\n  }))),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 40\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 40\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 43\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 42\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 42\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 46\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 45\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 40\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 43\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 49\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 44\n    }\n  })))\n};\nconst api = axios.create({\n  baseURL: `http://localhost:1337`\n});\n\nfunction validateEmail(email) {\n  const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nfunction App() {\n  var columns = [{\n    title: \"id\",\n    field: \"id\",\n    hidden: true\n  }, // {title: \"Avatar\", render: rowData => <Avatar maxInitials={1} size={40} round={true} name={rowData === undefined ? \" \" : rowData.first_name} />  },\n  {\n    title: \"Test\",\n    render: rowData => rowData.IsHead === \"Yes\" ? \"Так\" : \"Ні\"\n  }, {\n    title: \"Ім'я\",\n    field: \"FirstName\"\n  }, {\n    title: \"Побатькові\",\n    field: \"MiddleName\"\n  }, {\n    title: \"Прізвище\",\n    field: \"LastName\"\n  }, {\n    title: \"Староста\",\n    render: rowData => rowData.IsHead === true ? \"Так\" : \"Ні\"\n  }, {\n    title: \"Стипендія\",\n    render: rowData => rowData.Scholarship === true ? \"Так\" : \"Ні\"\n  }, {\n    title: \"Інформація про батьків\",\n    render: rowData => {\n      async function getParent(id) {\n        api.get('/parents/' + id).then(res => {\n          setParent(res.data);\n        }).catch(error => {\n          console.log(\"Error\");\n        });\n      }\n\n      var result = \"\";\n      var resultedAddress = \"\";\n      var resultedPhones = \"\";\n      var resultedEmails = \"\";\n      rowData.parents.slice().reverse().forEach(parentResp => {\n        result += parentResp.FirstName + \" \" + parentResp.MiddleName + \" \" + parentResp.LastName + \" \" + \"\\n\";\n        getParent(parentResp.id).then(res => {\n          console.log(\"HERE1\");\n          parentData.addresses.slice().reverse().forEach(parentAddress => resultedAddress += parentAddress.Address + \"\\n\");\n          parentData.phone_numbers.slice().reverse().forEach(parentPhone => resultedPhones += resultedPhones.PhoneNumber + \"\\n\");\n          parentData.emails.slice().reverse().forEach(parentEmail => resultedEmails += resultedEmails.Email + \"\\n\");\n          result = result += \"Адресси:\" + \"\\n\" + resultedAddress;\n          result = result += \"Телефони:\" + \"\\n\" + resultedPhones;\n          result = result += \"Emails:\" + \"\\n\" + resultedEmails;\n        });\n      });\n      console.log(\"Here2\");\n      return result;\n    }\n  }, {\n    title: \"Телефон\",\n    render: rowData => {\n      var result = \"\";\n      rowData.phone_numbers.slice().reverse().forEach(number => result += number.PhoneNumber.toString() + \"\\n\");\n      return result;\n    }\n  }, {\n    title: \"Форма оплати\",\n    render: rowData => rowData.IsContract === true ? \"Контракт\" : \"Бюджет\"\n  } // {title: \"email\", field: \"emails\"}\n  ];\n  const [data, setData] = useState([]); //table data\n\n  const [parentData, setParent] = useState([]); //parent data\n  //for error handling\n\n  const [iserror, setIserror] = useState(false);\n  const [errorMessages, setErrorMessages] = useState([]);\n  useEffect(() => {\n    api.get(\"/students\").then(res => {\n      setData(res.data);\n    }).catch(error => {\n      console.log(\"Error\");\n    });\n  }, []);\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    //validation\n    let errorList = [];\n\n    if (newData.first_name === \"\") {\n      errorList.push(\"Please enter first name\");\n    }\n\n    if (newData.last_name === \"\") {\n      errorList.push(\"Please enter last name\");\n    }\n\n    if (newData.email === \"\" || validateEmail(newData.email) === false) {\n      errorList.push(\"Please enter a valid email\");\n    }\n\n    if (errorList.length < 1) {\n      api.patch(\"/users/\" + newData.id, newData).then(res => {\n        const dataUpdate = [...data];\n        const index = oldData.tableData.id;\n        dataUpdate[index] = newData;\n        setData([...dataUpdate]);\n        resolve();\n        setIserror(false);\n        setErrorMessages([]);\n      }).catch(error => {\n        setErrorMessages([\"Update failed! Server error\"]);\n        setIserror(true);\n        resolve();\n      });\n    } else {\n      setErrorMessages(errorList);\n      setIserror(true);\n      resolve();\n    }\n  };\n\n  const handleRowAdd = (newData, resolve) => {\n    //validation\n    let errorList = [];\n\n    if (newData.first_name === undefined) {\n      errorList.push(\"Please enter first name\");\n    }\n\n    if (newData.last_name === undefined) {\n      errorList.push(\"Please enter last name\");\n    }\n\n    if (newData.email === undefined || validateEmail(newData.email) === false) {\n      errorList.push(\"Please enter a valid email\");\n    }\n\n    if (errorList.length < 1) {\n      //no error\n      api.post(\"/users\", newData).then(res => {\n        let dataToAdd = [...data];\n        dataToAdd.push(newData);\n        setData(dataToAdd);\n        resolve();\n        setErrorMessages([]);\n        setIserror(false);\n      }).catch(error => {\n        setErrorMessages([\"Cannot add data. Server error!\"]);\n        setIserror(true);\n        resolve();\n      });\n    } else {\n      setErrorMessages(errorList);\n      setIserror(true);\n      resolve();\n    }\n  };\n\n  const handleRowDelete = (oldData, resolve) => {\n    api.delete(\"/users/\" + oldData.id).then(res => {\n      const dataDelete = [...data];\n      const index = oldData.tableData.id;\n      dataDelete.splice(index, 1);\n      setData([...dataDelete]);\n      resolve();\n    }).catch(error => {\n      setErrorMessages([\"Delete failed! Server error\"]);\n      setIserror(true);\n      resolve();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, iserror && /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, errorMessages.map((msg, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 40\n      }\n    }, msg);\n  }))), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"User data from remote source\",\n    columns: columns,\n    data: data,\n    icons: tableIcons,\n    options: {\n      exportButton: true\n    },\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        handleRowUpdate(newData, oldData, resolve);\n      }),\n      onRowAdd: newData => new Promise(resolve => {\n        handleRowAdd(newData, resolve);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        handleRowDelete(oldData, resolve);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Volumes/macApp/react/material-ui-table-crud-restapi/src/App.js"],"names":["React","useState","useEffect","forwardRef","Avatar","Grid","MaterialTable","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","axios","Alert","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","api","create","baseURL","validateEmail","email","re","test","String","toLowerCase","App","columns","title","field","hidden","render","rowData","IsHead","Scholarship","getParent","id","get","then","res","setParent","data","catch","error","console","log","result","resultedAddress","resultedPhones","resultedEmails","parents","slice","reverse","forEach","parentResp","FirstName","MiddleName","LastName","parentData","addresses","parentAddress","Address","phone_numbers","parentPhone","PhoneNumber","emails","parentEmail","Email","number","toString","IsContract","setData","iserror","setIserror","errorMessages","setErrorMessages","handleRowUpdate","newData","oldData","resolve","errorList","first_name","push","last_name","length","patch","dataUpdate","index","tableData","handleRowAdd","undefined","post","dataToAdd","handleRowDelete","delete","dataDelete","splice","map","msg","i","exportButton","onRowUpdate","Promise","onRowAdd","onRowDelete"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {forwardRef} from 'react';\nimport Avatar from 'react-avatar';\nimport Grid from '@material-ui/core/Grid'\n\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport axios from 'axios'\nimport Alert from '@material-ui/lab/Alert';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref}/>),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>)\n};\n\nconst api = axios.create({\n    baseURL: `http://localhost:1337`\n})\n\n\nfunction validateEmail(email) {\n    const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nfunction App() {\n\n    var columns = [\n        {title: \"id\", field: \"id\", hidden: true},\n        // {title: \"Avatar\", render: rowData => <Avatar maxInitials={1} size={40} round={true} name={rowData === undefined ? \" \" : rowData.first_name} />  },\n        {title: \"Test\", render: rowData => rowData.IsHead === \"Yes\" ? \"Так\" : \"Ні\"},\n        {title: \"Ім'я\", field: \"FirstName\"},\n        {title: \"Побатькові\", field: \"MiddleName\"},\n        {title: \"Прізвище\", field: \"LastName\"},\n        {title: \"Староста\", render: rowData => rowData.IsHead === true ? \"Так\" : \"Ні\"},\n        {title: \"Стипендія\", render: rowData => rowData.Scholarship === true ? \"Так\" : \"Ні\"},\n        {\n            title: \"Інформація про батьків\", render: rowData => {\n                async function getParent(id) {\n                    api.get('/parents/' + id)\n                        .then(res => {\n                            setParent(res.data)\n\n                        })\n                        .catch(error => {\n                            console.log(\"Error\")\n                        })\n                }\n\n                var result = \"\"\n                var resultedAddress = \"\"\n                var resultedPhones = \"\"\n                var resultedEmails = \"\"\n                rowData.parents.slice().reverse().forEach(parentResp => {\n                        result += parentResp.FirstName + \" \" + parentResp.MiddleName + \" \" + parentResp.LastName + \" \" + \"\\n\"\n                        getParent(parentResp.id).then(\n                            res => {\n                                console.log(\"HERE1\")\n                                parentData.addresses.slice().reverse().forEach(parentAddress => resultedAddress += parentAddress.Address + \"\\n\")\n                                parentData.phone_numbers.slice().reverse().forEach(parentPhone => resultedPhones += resultedPhones.PhoneNumber + \"\\n\")\n                                parentData.emails.slice().reverse().forEach(parentEmail => resultedEmails += resultedEmails.Email + \"\\n\")\n                                result = result += \"Адресси:\" + \"\\n\" + resultedAddress\n                                result = result += \"Телефони:\" + \"\\n\" + resultedPhones\n                                result = result += \"Emails:\" + \"\\n\" + resultedEmails\n                            }\n                        )\n\n                    }\n                )\n                console.log(\"Here2\")\n                return result\n            }\n        },\n        {\n            title: \"Телефон\", render: rowData => {\n                var result = \"\"\n                rowData.phone_numbers.slice().reverse().forEach(number => result += number.PhoneNumber.toString() + \"\\n\")\n                return result\n            }\n        },\n        {title: \"Форма оплати\", render: rowData => rowData.IsContract === true ? \"Контракт\" : \"Бюджет\"}\n        // {title: \"email\", field: \"emails\"}\n    ]\n    const [data, setData] = useState([]); //table data\n    const [parentData, setParent] = useState([]); //parent data\n\n    //for error handling\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    useEffect(() => {\n        api.get(\"/students\")\n            .then(res => {\n                setData(res.data)\n            })\n            .catch(error => {\n                console.log(\"Error\")\n            })\n    }, [])\n\n    const handleRowUpdate = (newData, oldData, resolve) => {\n        //validation\n        let errorList = []\n        if (newData.first_name === \"\") {\n            errorList.push(\"Please enter first name\")\n        }\n        if (newData.last_name === \"\") {\n            errorList.push(\"Please enter last name\")\n        }\n        if (newData.email === \"\" || validateEmail(newData.email) === false) {\n            errorList.push(\"Please enter a valid email\")\n        }\n\n        if (errorList.length < 1) {\n            api.patch(\"/users/\" + newData.id, newData)\n                .then(res => {\n                    const dataUpdate = [...data];\n                    const index = oldData.tableData.id;\n                    dataUpdate[index] = newData;\n                    setData([...dataUpdate]);\n                    resolve()\n                    setIserror(false)\n                    setErrorMessages([])\n                })\n                .catch(error => {\n                    setErrorMessages([\"Update failed! Server error\"])\n                    setIserror(true)\n                    resolve()\n\n                })\n        } else {\n            setErrorMessages(errorList)\n            setIserror(true)\n            resolve()\n\n        }\n\n    }\n\n    const handleRowAdd = (newData, resolve) => {\n        //validation\n        let errorList = []\n        if (newData.first_name === undefined) {\n            errorList.push(\"Please enter first name\")\n        }\n        if (newData.last_name === undefined) {\n            errorList.push(\"Please enter last name\")\n        }\n        if (newData.email === undefined || validateEmail(newData.email) === false) {\n            errorList.push(\"Please enter a valid email\")\n        }\n\n        if (errorList.length < 1) { //no error\n            api.post(\"/users\", newData)\n                .then(res => {\n                    let dataToAdd = [...data];\n                    dataToAdd.push(newData);\n                    setData(dataToAdd);\n                    resolve()\n                    setErrorMessages([])\n                    setIserror(false)\n                })\n                .catch(error => {\n                    setErrorMessages([\"Cannot add data. Server error!\"])\n                    setIserror(true)\n                    resolve()\n                })\n        } else {\n            setErrorMessages(errorList)\n            setIserror(true)\n            resolve()\n        }\n\n\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n\n        api.delete(\"/users/\" + oldData.id)\n            .then(res => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                resolve()\n            })\n            .catch(error => {\n                setErrorMessages([\"Delete failed! Server error\"])\n                setIserror(true)\n                resolve()\n            })\n    }\n\n\n    return (\n        <div className=\"App\">\n\n            <Grid container spacing={1}>\n                <Grid item xs={12}></Grid>\n                <Grid item xs={12}>\n                    <div>\n                        {iserror &&\n                        <Alert severity=\"error\">\n                            {errorMessages.map((msg, i) => {\n                                return <div key={i}>{msg}</div>\n                            })}\n                        </Alert>\n                        }\n                    </div>\n                    <MaterialTable\n                        title=\"User data from remote source\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n                        options={{\n                            exportButton: true\n                        }}\n                        editable={{\n                            onRowUpdate: (newData, oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowUpdate(newData, oldData, resolve);\n\n                                }),\n                            onRowAdd: (newData) =>\n                                new Promise((resolve) => {\n                                    handleRowAdd(newData, resolve)\n                                }),\n                            onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowDelete(oldData, resolve)\n                                }),\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12}></Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}